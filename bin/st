#!/bin/bash
version_upgrade="0.0.0.1"

upgrade_version() {
    addition=$1
    version=`cat ./version.txt`
    segs=(${version//./ })
    if [ ${#segs[@]} -ne 4 ]; then
        echo -e "Invalid version.txt format"
        exit 1
    fi
    
    primary=${segs[0]}
    secondary=${segs[1]}
    patch=${segs[2]}
    build=${segs[3]}
    
    upgrade=(${addition//./ })
    if [ ${#upgrade[@]} -ne 4 ]; then
        echo -e "Invalid version format"
        exit 1
    fi
    
    primary_add=${upgrade[0]}
    secondary_add=${upgrade[1]}
    patch_add=${upgrade[2]}
    build_add=${upgrade[3]}
    
    primary=`expr $primary + $primary_add`
    secondary=`expr $secondary + $secondary_add`
    patch=`expr $patch + $patch_add`
    build=`expr $build + $build_add`
    
    echo "$primary.$secondary.$patch.$build" > ./version.txt
}

if [ "$#" -ne "4" ]; then
    echo "useage: st -u <version_delta>"
    echo "Example: st -u 0.0.1.1"
    exit 1
fi

while [ $# -ge 2 ] ; do
    case "$1" in
        -u) version_upgrade=$2; shift 2;;
        -m) comment=$2; shift 2;;
         *) echo "unknown parameter $1." ; exit 1 ; break;;
    esac
done

if [ ! -f ./version.txt ]; then
    echo -e "Cannot find version.txt"
    exit 1
fi

upgrade_version $version_upgrade

modified_files=`git diff --name-only`
echo -e "Following file(s) have been modified:\n$modified_files"
git add $modified_files
git commit -m "$comment"
git push

new_version=`cat ./version.txt`
git tag -a $new_version -m "$comment"
git push --tags
